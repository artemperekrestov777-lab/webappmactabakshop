// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.ready();
tg.expand();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let cart = [];
let currentCategory = 'all';
let currentSort = 'default';
let allProducts = [];
let currentProduct = null;
let savedUserData = null;
const API_URL = 'http://localhost:3000/api';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', async () => {
    await loadProducts();
    loadCategories();
    loadCart();
    loadSavedUserData();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    document.getElementById('checkoutForm').addEventListener('submit', handleCheckoutSubmit);
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
async function loadProducts() {
    try {
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å GitHub Pages —Å –∫–µ—à-–±–∞—Å—Ç–∏–Ω–≥–æ–º
        const timestamp = Date.now();
        const productsUrl = `https://artemperekrestov777-lab.github.io/webappmactabakshop/webapp/products.json?v=${timestamp}`;

        const response = await fetch(productsUrl, {
            cache: 'no-cache',
            headers: {
                'Cache-Control': 'no-cache, no-store, must-revalidate',
                'Pragma': 'no-cache',
                'Expires': '0'
            }
        });

        if (response.ok) {
            allProducts = await response.json();
            console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å GitHub Pages`);
        } else {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å GitHub Pages, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
            allProducts = window.productsData || [];
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        // –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤
        allProducts = window.productsData || [];
    }

    displayProducts();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function loadCategories() {
    const categoriesContainer = document.getElementById('categoriesContainer');
    const categories = [
        { id: 'all', name: '–í—Å–µ' },
        { id: 'new', name: '–ù–æ–≤–∏–Ω–∫–∏ –æ—Ç –ú–ê–ö –¢–ê–ë–ê–ö' },
        { id: 'standard', name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–ª–µ–Ω–¥—ã' },
        { id: 'aromatic', name: '–ê—Ä–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–ª–µ–Ω–¥—ã' },
        { id: 'pipe', name: '–¢—Ä—É–±–æ—á–Ω—ã–µ –±–ª–µ–Ω–¥—ã' },
        { id: 'gilzy', name: '–°–∏–≥–∞—Ä–µ—Ç–Ω—ã–µ –≥–∏–ª—å–∑—ã' },
        { id: 'custom', name: '–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–π –Ω–∞–±–æ—Ä' },
        { id: 'mactabak', name: '–ü—Ä–æ–¥—É–∫—Ü–∏—è –æ—Ç –ú–ê–ö–¢–ê–ë–ê–ö' },
        { id: 'pipes', name: '–ö—É—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä—É–±–∫–∏' },
        { id: 'machines', name: '–ú–∞—à–∏–Ω–∫–∏ –¥–ª—è –Ω–∞–±–∏–≤–∫–∏' },
        { id: 'tea', name: '–ö–∏—Ç–∞–π—Å–∫–∏–π —á–∞–π' },
        { id: 'tamper', name: '–¢–∞–º–ø–µ—Ä' }
    ];

    categories.forEach(cat => {
        const btn = document.createElement('button');
        btn.className = 'category-btn';
        btn.textContent = cat.name;
        btn.onclick = () => selectCategory(cat.id);
        if (cat.id === currentCategory) {
            btn.classList.add('active');
        }
        categoriesContainer.appendChild(btn);
    });
}

// –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function selectCategory(categoryId) {
    currentCategory = categoryId;

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.category-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    event.target.classList.add('active');

    displayProducts();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
function displayProducts() {
    const container = document.getElementById('productsContainer');
    container.innerHTML = '';

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let filteredProducts = currentCategory === 'all'
        ? allProducts
        : allProducts.filter(p => p.category === currentCategory);

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    switch (currentSort) {
        case 'price_asc':
            filteredProducts.sort((a, b) => a.price - b.price);
            break;
        case 'price_desc':
            filteredProducts.sort((a, b) => b.price - a.price);
            break;
        case 'new':
            filteredProducts = filteredProducts.filter(p => p.category === 'new');
            break;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    filteredProducts.forEach(product => {
        const card = createProductCard(product);
        container.appendChild(card);
    });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
function createProductCard(product) {
    const card = document.createElement('div');
    card.className = 'product-card';
    card.onclick = () => showProductModal(product);

    const imageDiv = document.createElement('div');
    imageDiv.className = 'product-image';

    // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –∑–∞–≥–ª—É—à–∫—É —Å —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categoryEmojis = {
        'new': '‚ú®',
        'standard': 'üö¨',
        'aromatic': 'üå∏',
        'pipe': 'üéØ',
        'gilzy': 'üìú',
        'custom': '‚öôÔ∏è',
        'mactabak': 'üëë',
        'pipes': 'üé≠',
        'machines': 'üîß',
        'tea': 'üçÉ',
        'tamper': 'üî®'
    };

    const emoji = categoryEmojis[product.category] || 'üì¶';

    if (product.image || product.imageUrl) {
        const img = document.createElement('img');
        const fullImageUrl = (product.imageUrl || product.image || '').startsWith('http')
            ? product.imageUrl || product.image
            : `https://artemperekrestov777-lab.github.io/webappmactabakshop/webapp${product.imageUrl || product.image}`;

        img.src = fullImageUrl;
        img.alt = product.name;
        img.onerror = () => {
            img.style.display = 'none';
            imageDiv.innerHTML = `<div class="emoji-placeholder">${emoji}</div>`;
        };
        imageDiv.appendChild(img);
    } else {
        imageDiv.innerHTML = `<div class="emoji-placeholder">${emoji}</div>`;
    }

    const info = document.createElement('div');
    info.className = 'product-info';

    const name = document.createElement('div');
    name.className = 'product-name';
    name.textContent = product.name;

    const price = document.createElement('div');
    price.className = 'product-price';
    price.textContent = `${product.price}‚ÇΩ`;

    const addBtn = document.createElement('button');
    addBtn.className = 'add-to-cart';
    addBtn.textContent = '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É';
    addBtn.onclick = (e) => {
        e.stopPropagation();
        addToCart(product);
    };

    info.appendChild(name);
    info.appendChild(price);
    info.appendChild(addBtn);

    card.appendChild(imageDiv);
    card.appendChild(info);

    return card;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç–æ–≤–∞—Ä–∞
function showProductModal(product) {
    currentProduct = product;

    const modalImage = document.getElementById('modalImage');
    const imageUrl = product.imageUrl || product.image;

    if (imageUrl && imageUrl !== '' && !imageUrl.includes('tempImageGowoGG')) {
        modalImage.src = imageUrl;
        modalImage.style.display = 'block';
        modalImage.className = '';
        modalImage.onerror = function() {
            // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º emoji
            showModalEmojiPlaceholder(product);
        };
    } else {
        // –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º emoji –µ—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        showModalEmojiPlaceholder(product);
    }

    document.getElementById('modalTitle').textContent = product.name;
    document.getElementById('modalDescription').textContent = product.description || '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
    document.getElementById('modalPrice').textContent = `${product.price}‚ÇΩ`;
    document.getElementById('productModal').style.display = 'flex';
}

// –ü–æ–∫–∞–∑–∞—Ç—å emoji –∑–∞–≥–ª—É—à–∫—É –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function showModalEmojiPlaceholder(product) {
    const modalImage = document.getElementById('modalImage');
    const categoryEmojis = {
        'new': '‚ú®',
        'standard': 'üö¨',
        'aromatic': 'üå∏',
        'pipe': 'üéØ',
        'gilzy': 'üìú',
        'custom': '‚öôÔ∏è',
        'mactabak': 'üëë',
        'pipes': 'üé≠',
        'machines': 'üîß',
        'tea': 'üçÉ',
        'tamper': 'üî®'
    };

    const emoji = categoryEmojis[product.category] || 'üö¨';

    // –°–∫—Ä—ã–≤–∞–µ–º img —ç–ª–µ–º–µ–Ω—Ç –∏ —Å–æ–∑–¥–∞–µ–º emoji div
    modalImage.style.display = 'none';

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π emoji placeholder –µ—Å–ª–∏ –µ—Å—Ç—å
    const existingPlaceholder = modalImage.parentNode.querySelector('.modal-emoji-placeholder');
    if (existingPlaceholder) {
        existingPlaceholder.remove();
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π emoji placeholder
    const emojiDiv = document.createElement('div');
    emojiDiv.className = 'modal-emoji-placeholder';
    emojiDiv.textContent = emoji;
    emojiDiv.style.cssText = `
        width: 100%;
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 80px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 12px;
        color: white;
        text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        margin-bottom: 15px;
    `;

    // –í—Å—Ç–∞–≤–ª—è–µ–º emoji div –ø–æ—Å–ª–µ img —ç–ª–µ–º–µ–Ω—Ç–∞
    modalImage.parentNode.insertBefore(emojiDiv, modalImage.nextSibling);
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeProductModal() {
    // –û—á–∏—â–∞–µ–º emoji placeholder –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    const existingPlaceholder = document.querySelector('.modal-emoji-placeholder');
    if (existingPlaceholder) {
        existingPlaceholder.remove();
    }

    document.getElementById('productModal').style.display = 'none';
    currentProduct = null;
}

// –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function addToCartFromModal() {
    if (currentProduct) {
        addToCart(currentProduct);
        closeProductModal();
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(product) {
    const existingItem = cart.find(item => item.id === product.id);

    if (existingItem) {
        existingItem.quantity++;
    } else {
        cart.push({
            ...product,
            quantity: 1
        });
    }

    saveCart();
    updateCartUI();

    // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    tg.HapticFeedback.impactOccurred('light');
    showNotification('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É');
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function saveCart() {
    localStorage.setItem('cart', JSON.stringify(cart));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function loadCart() {
    const savedCart = localStorage.getItem('cart');
    if (savedCart) {
        cart = JSON.parse(savedCart);
        updateCartUI();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartUI() {
    const cartCount = document.getElementById('cartCount');
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCount.textContent = totalItems;
    cartCount.style.display = totalItems > 0 ? 'flex' : 'none';

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞
    if (document.getElementById('cartScreen').style.display !== 'none') {
        displayCart();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É
function showCart() {
    document.getElementById('cartScreen').style.display = 'block';
    displayCart();
}

// –ó–∞–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É
function closeCart() {
    document.getElementById('cartScreen').style.display = 'none';
    // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ (—Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é)
    setTimeout(() => {
        cart = [];
        saveCart();
        updateCartUI();
    }, 300);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function displayCart() {
    const cartItems = document.getElementById('cartItems');
    const emptyCart = document.getElementById('emptyCart');
    const cartSummary = document.getElementById('cartSummary');

    if (cart.length === 0) {
        cartItems.style.display = 'none';
        emptyCart.style.display = 'block';
        cartSummary.style.display = 'none';
    } else {
        cartItems.style.display = 'block';
        emptyCart.style.display = 'none';
        cartSummary.style.display = 'block';

        cartItems.innerHTML = '';
        let total = 0;

        cart.forEach(item => {
            const itemTotal = item.price * item.quantity;
            total += itemTotal;

            const cartItem = document.createElement('div');
            cartItem.className = 'cart-item';

            cartItem.innerHTML = `
                <div class="cart-item-image">${item.imageUrl ? `<img src="${item.imageUrl}" alt="${item.name}">` : 'üì¶'}</div>
                <div class="cart-item-info">
                    <div class="cart-item-name">${item.name}</div>
                    <div class="cart-item-price">${item.price}‚ÇΩ</div>
                    <div class="cart-item-controls">
                        <button class="quantity-btn" onclick="updateQuantity('${item.id}', -1)">-</button>
                        <span class="quantity">${item.quantity}</span>
                        <button class="quantity-btn" onclick="updateQuantity('${item.id}', 1)">+</button>
                        <button onclick="removeFromCart('${item.id}')">üóëÔ∏è</button>
                    </div>
                </div>
            `;

            cartItems.appendChild(cartItem);
        });

        document.getElementById('cartTotal').textContent = `${total}‚ÇΩ`;
        document.getElementById('checkoutTotal').textContent = `${total}‚ÇΩ`;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
function updateQuantity(productId, change) {
    const item = cart.find(item => item.id === productId);
    if (item) {
        item.quantity += change;
        if (item.quantity <= 0) {
            removeFromCart(productId);
        } else {
            saveCart();
            displayCart();
            updateCartUI();
        }
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    saveCart();
    displayCart();
    updateCartUI();
}

// –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
function clearCart() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É?')) {
        cart = [];
        saveCart();
        displayCart();
        updateCartUI();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function showCheckout() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–µ—Å–∞
    const weightItems = cart.filter(item => item.unit === '–≤–µ—Å');
    const totalWeight = weightItems.reduce((sum, item) => sum + (item.weight * item.quantity), 0);

    if (weightItems.length > 0 && totalWeight < 1000) {
        alert('–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä—ë–º –∑–∞–∫–∞–∑–∞ –ø–æ –≤–µ—Å–æ–≤—ã–º —Ç–æ–≤–∞—Ä–∞–º –æ—Ç 1 –∫–≥');
        return;
    }

    document.getElementById('checkoutScreen').style.display = 'block';

    // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (savedUserData) {
        document.getElementById('fullName').value = savedUserData.fullName || '';
        document.getElementById('phone').value = savedUserData.phone || '';
        document.getElementById('email').value = savedUserData.email || '';
        document.getElementById('city').value = savedUserData.city || '';
        document.getElementById('region').value = savedUserData.region || '';
        document.getElementById('address').value = savedUserData.address || '';
        document.getElementById('deliveryMethod').value = savedUserData.preferredDelivery || '';
    }

    updateCheckoutSummary();
}

// –ó–∞–∫—Ä—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function closeCheckout() {
    document.getElementById('checkoutScreen').style.display = 'none';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
function updateDeliveryPrice() {
    updateCheckoutSummary();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ –∑–∞–∫–∞–∑–∞
function updateCheckoutSummary() {
    const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    const deliveryMethod = document.getElementById('deliveryMethod').value;
    let deliveryPrice = 0;

    if (deliveryMethod === 'pochta') {
        deliveryPrice = 500;
    } else if (deliveryMethod === 'sdek') {
        deliveryPrice = 600;
    }

    const total = subtotal + deliveryPrice;

    document.getElementById('checkoutSubtotal').textContent = `${subtotal}‚ÇΩ`;
    document.getElementById('checkoutDelivery').textContent = `${deliveryPrice}‚ÇΩ`;
    document.getElementById('checkoutFinalTotal').textContent = `${total}‚ÇΩ`;
    document.getElementById('submitTotal').textContent = `${total}‚ÇΩ`;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞
async function handleCheckoutSubmit(event) {
    event.preventDefault();

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    if (!validateCheckoutForm()) {
        return;
    }

    // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
    const formData = {
        fullName: document.getElementById('fullName').value.trim(),
        phone: document.getElementById('phone').value.trim(),
        email: document.getElementById('email').value.trim(),
        city: document.getElementById('city').value.trim(),
        region: document.getElementById('region').value.trim(),
        address: document.getElementById('address').value.trim(),
        deliveryMethod: document.getElementById('deliveryMethod').value,
        comment: document.getElementById('comment').value.trim()
    };

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    formData.deliveryPrice = formData.deliveryMethod === 'pochta' ? 500 : 600;

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    savedUserData = formData;
    localStorage.setItem('userData', JSON.stringify(savedUserData));

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–∫–∞–∑–∞
    const orderData = {
        userId: tg.initDataUnsafe?.user?.id || 0,
        items: cart,
        customer: formData
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
    showLoader();

    try {
        const response = await fetch(`${API_URL}/order`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(orderData)
        });

        const result = await response.json();

        if (result.success) {
            // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
            cart = [];
            saveCart();
            updateCartUI();

            // –ó–∞–∫—Ä—ã—Ç–∏–µ —ç–∫—Ä–∞–Ω–æ–≤
            closeCheckout();
            closeCart();

            // –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –∫–∞—Ç–∞–ª–æ–≥
            if (result.order.isFromMoscow) {
                alert('–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞.');
            } else {
                // QR-–∫–æ–¥ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω —á–µ—Ä–µ–∑ –±–æ—Ç–∞
            }

            // –í–æ–∑–≤—Ä–∞—Ç –≤ –∫–∞—Ç–∞–ª–æ–≥
            showCatalog();
        } else {
            alert(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
        alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
        hideLoader();
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
function validateCheckoutForm() {
    const fields = [
        { id: 'fullName', pattern: /^[–ê-–Ø–∞-—è–Å—ë\s]{10,}$/, error: '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –§–ò–û (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)' },
        { id: 'phone', pattern: /^[+]?[0-9]{11,}$/, error: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞' },
        { id: 'email', pattern: /^[^\s@]+@[^\s@]+\.[^\s@]+$/, error: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email' },
        { id: 'city', min: 2, error: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞' },
        { id: 'region', min: 2, error: '–í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏–ª–∏ –æ–±–ª–∞—Å—Ç—å' },
        { id: 'address', min: 10, error: '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏' },
        { id: 'deliveryMethod', required: true, error: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏' }
    ];

    let isValid = true;

    fields.forEach(field => {
        const element = document.getElementById(field.id);
        const value = element.value.trim();
        const formGroup = element.closest('.form-group');
        const errorMessage = formGroup.querySelector('.error-message');

        formGroup.classList.remove('error');

        if (field.required && !value) {
            formGroup.classList.add('error');
            errorMessage.textContent = field.error;
            isValid = false;
        } else if (field.pattern && !field.pattern.test(value)) {
            formGroup.classList.add('error');
            errorMessage.textContent = field.error;
            isValid = false;
        } else if (field.min && value.length < field.min) {
            formGroup.classList.add('error');
            errorMessage.textContent = field.error;
            isValid = false;
        }
    });

    return isValid;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadSavedUserData() {
    const saved = localStorage.getItem('userData');
    if (saved) {
        savedUserData = JSON.parse(saved);
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function showCatalog() {
    document.getElementById('welcomeScreen').style.display = 'none';
    document.getElementById('mainContainer').style.display = 'block';
}

function goBack() {
    if (document.getElementById('cartScreen').style.display !== 'none') {
        closeCart();
    } else if (document.getElementById('checkoutScreen').style.display !== 'none') {
        closeCheckout();
    } else {
        window.history.back();
    }
}

// –ü–æ–∏—Å–∫
function toggleSearch() {
    const searchBar = document.getElementById('searchBar');
    searchBar.style.display = searchBar.style.display === 'none' ? 'flex' : 'none';
    if (searchBar.style.display !== 'none') {
        document.getElementById('searchInput').focus();
    }
}

function searchProducts() {
    const query = document.getElementById('searchInput').value.toLowerCase();

    if (query.length < 2) {
        displayProducts();
        return;
    }

    const filtered = allProducts.filter(product =>
        product.name.toLowerCase().includes(query) ||
        (product.description && product.description.toLowerCase().includes(query))
    );

    const container = document.getElementById('productsContainer');
    container.innerHTML = '';

    filtered.forEach(product => {
        const card = createProductCard(product);
        container.appendChild(card);
    });
}

function clearSearch() {
    document.getElementById('searchInput').value = '';
    displayProducts();
    toggleSearch();
}

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
function showSortMenu() {
    const menu = document.getElementById('sortMenu');
    menu.style.display = menu.style.display === 'none' ? 'block' : 'none';
}

function sortProducts(sortType) {
    currentSort = sortType;
    displayProducts();
    document.getElementById('sortMenu').style.display = 'none';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫
function showLoader() {
    document.getElementById('loader').style.display = 'flex';
}

// –°–∫—Ä—ã—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫
function hideLoader() {
    document.getElementById('loader').style.display = 'none';
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message) {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    console.log(message);
}